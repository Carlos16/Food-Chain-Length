path2 <- getURL("https://raw.githubusercontent.com/jjborrelli/Food-Chain-Length/master/Tables/NodeProperties.csv",
ssl.verifypeer=0L, followlocation=1L)
trophic.properties <- read.csv(text = path2, row.names = 1)
consumers <- which(round(trophic.properties$TL, 6) >= 2)
# ggplot of distribution of trophic positions equal or higher than 2
tc.plot <- ggplot(trophic.properties[consumers,], aes(x = TL, y = ..density..)) + theme_bw()
tc.plot <- tc.plot + geom_histogram(binwidth = .8) + xlab("Trophic Position") + ylab("Density")
tc.plot <- tc.plot + theme(axis.title.x = element_text(size = 25))
tc.plot <- tc.plot + theme(axis.title.y = element_text(size = 25))
tc.plot <- tc.plot + theme(axis.text.x = element_text(size = 18))
tc.plot <- tc.plot + theme(axis.text.y = element_text(size = 18))
tc.plot + scale_x_continuous(breaks = 2:6, name = "Trophic Position") + scale_y_continuous(name = "Density")
require(RCurl)
require(igraph)
require(reshape2)
require(ggplot2)
require(grid)
require(devtools)
path2 <- getURL("https://raw.githubusercontent.com/jjborrelli/Food-Chain-Length/master/Tables/NodeProperties.csv", ssl.verifypeer=0L, followlocation=1L)
trophic.properties <- read.csv(text = path2, row.names = 1)
consumers <- which(round(trophic.properties$TL, 6) >= 2)
# ggplot of distribution of trophic positions equal or higher than 2
tc.plot <- ggplot(trophic.properties[consumers,], aes(x = TL, y = ..density..)) + theme_bw()
tc.plot <- tc.plot + geom_histogram(binwidth = .8) + xlab("Trophic Position") + ylab("Density")
tc.plot <- tc.plot + theme(axis.title.x = element_text(size = 25))
tc.plot <- tc.plot + theme(axis.title.y = element_text(size = 25))
tc.plot <- tc.plot + theme(axis.text.x = element_text(size = 18))
tc.plot <- tc.plot + theme(axis.text.y = element_text(size = 18))
tc.plot + scale_x_continuous(breaks = 2:6, name = "Trophic Position") + scale_y_continuous(name = "Density")
getwd()
setwd("C:/Users/borre_000/Desktop/GitHub/Food-Chain-Length/Plots/")
ggsave("tc_plot.svg", height = 8, width = 8, dpi = 600)
sign2<-matrix(c(-1,-1,1,0),nrow=2,ncol=2)
diag(sign2)<--1
sign3<-matrix(c(-1,-1,-1,1,0,-1,1,1,0),nrow=3,ncol=3)
diag(sign3)<--1
sign4<-matrix(nrow=4,ncol=4)
sign4[lower.tri(sign4)]<--1
sign4[upper.tri(sign4)]<-1
diag(sign4)<--1
sign5<-matrix(nrow=5,ncol=5)
sign5[lower.tri(sign5)]<--1
sign5[upper.tri(sign5)]<-1
diag(sign5)<--1
sign6<-matrix(nrow=6,ncol=6)
sign6[lower.tri(sign6)]<--1
sign6[upper.tri(sign6)]<-1
diag(sign6)<--1
analyze.eigen<-function(m){
for(i in 1:nrow(m)){
for (j in 1:nrow(m)){
ifelse(m[i,j]==1,m[i,j]<-runif(1,0,10),NA)
ifelse(m[i,j]==-1,m[i,j]<-runif(1,-1,0),NA)
}
}
for(i in 1:nrow(m)){
if(m[i,i]<0){m[i,i]<--1}
}
ev<-max(Re(eigen(m)$values))
return(ev)
}
set.seed(5)
eigenvalues<-list()
qss<-list()
for(i in 1:5){
eigenvalues[[i]]<-replicate(10000,analyze.eigen(sign.matrices[[i]]))
qss[[i]]<-sum(eigenvalues[[i]]<0)/10000
}
names(eigenvalues)<-c("2 sp","3 sp","4 sp","5 sp","6 sp")
names(qss)<-c("2 sp","3 sp","4 sp","5 sp", "6 sp")
qss
sign.matrices<-list(sign2,sign3,sign4,sign5,sign6)
names(sign.matrices)<-c("2 sp","3 sp","4 sp","5 sp","6 sp")
sign.matrices
eigenvalues<-list()
qss<-list()
for(i in 1:5){
eigenvalues[[i]]<-replicate(10000,analyze.eigen(sign.matrices[[i]]))
qss[[i]]<-sum(eigenvalues[[i]]<0)/10000
}
names(eigenvalues)<-c("2 sp","3 sp","4 sp","5 sp","6 sp")
names(qss)<-c("2 sp","3 sp","4 sp","5 sp", "6 sp")
qss
qss.plot <- qplot(2:6, unlist(qss), xlab = "Number of Trophic Levels", ylab = "Quasi Sign-
Stability", margin = T)
qss.plot <- qss.plot + geom_point(size = 4)
qss.plot <- qss.plot + geom_line()
qss.plot <- qss.plot + theme(axis.title.x = element_text(size=22))
qss.plot <- qss.plot + theme(axis.title.y = element_text(size=22))
qss.plot <- qss.plot + theme(axis.text.x = element_text(size=18))
qss.plot <- qss.plot + theme(axis.text.y = element_text(size=18))
qss.plot
qss.plot <- qplot(2:6, unlist(qss), xlab = "Number of Trophic Levels", ylab = "Quasi Sign-
Stability", margin = T)
qss.plot <- qss.plot + geom_point(size = 4)
qss.plot <- qss.plot + geom_line() + theme_bw()
qss.plot <- qss.plot + theme(axis.title.x = element_text(size=22))
qss.plot <- qss.plot + theme(axis.title.y = element_text(size=22))
qss.plot <- qss.plot + theme(axis.text.x = element_text(size=18))
qss.plot <- qss.plot + theme(axis.text.y = element_text(size=18))
qss.plot
ggsave("qss_plot.svg", height = 8, width = 8, dpi = 600)
