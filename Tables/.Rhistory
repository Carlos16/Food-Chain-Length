require(data.table)
#make the cluster
cl <- makeCluster(detectCores()-1)
registerDoSNOW(cl)
RESULT <- foreach(i = 1:maxchain) %dopar% {
source("C:/Users/jjborrelli/Desktop/GitHub/Food-Chain-Length/robustnessFUNC.R")
#cat(i, "\n")
#rwebs <- randomWEBS(S = 10, numweb = webiter, chain = i, total = totalINT)
rwebs <- niche_maker(15, 10, totalINT)
rqss <- list()
for(j in 1:nrow(params)){
rqss[[j]] <- randomQSS(mywebs = rwebs, params = params[j,1:2])
rqss[[j]][[1]] <- cbind(C = rep(totalINT, nrow(rqss[[j]][[1]])),
mxch = rep(i, nrow(rqss[[j]][[1]])),
rqss[[j]][[1]],
par = rep(paste(params[j,], collapse = "/"),
nrow(rqss[[j]][[1]])))
rqss[[j]][[2]] <- cbind(C = rep(totalINT, nrow(rqss[[j]][[2]])),
mxch = rep(i, nrow(rqss[[j]][[2]])),
rqss[[j]][[2]],
par = rep(paste(params[j,], collapse = "/"),
nrow(rqss[[j]][[2]])))
cat("--", j, "\n")
}
rqss <- unlist(rqss, recursive = F)
web.dat.ls <- rbindlist(rqss[seq(1, length(rqss), 2)])
iter.dat.ls <- rbindlist(rqss[seq(2, length(rqss), 2)])
return(list(web.dat.ls, iter.dat.ls))
}
stopCluster(cl)
RESULT <- unlist(RESULT, recursive = F)
chain.data <- rbindlist(RESULT[seq(1, length(RESULT), 2)])
iter.data <- rbindlist(RESULT[seq(2, length(RESULT), 2)])
rm(RESULT)
write.csv(chain.data, file = paste(filepath, "/webdata-",
totalINT, ".csv", sep = ""),
row.names = F)
write.csv(iter.data, file = paste(filepath, "/iterdata-",
totalINT, ".csv", sep = ""),
row.names = F)
return(rbindlist(RESULT))
getQSS <- function(webiter = 100, C, maxchain = 9, totalINT = 14, params, filepath){
require(doSNOW)
require(parallel)
require(data.table)
#make the cluster
cl <- makeCluster(detectCores()-1)
registerDoSNOW(cl)
RESULT <- foreach(i = 1:maxchain) %dopar% {
source("C:/Users/jjborrelli/Desktop/GitHub/Food-Chain-Length/robustnessFUNC.R")
#cat(i, "\n")
#rwebs <- randomWEBS(S = 10, numweb = webiter, chain = i, total = totalINT)
rwebs <- niche_maker(15, 10, totalINT)
rqss <- list()
for(j in 1:nrow(params)){
rqss[[j]] <- randomQSS(mywebs = rwebs, params = params[j,1:2])
rqss[[j]][[1]] <- cbind(C = rep(totalINT, nrow(rqss[[j]][[1]])),
mxch = rep(i, nrow(rqss[[j]][[1]])),
rqss[[j]][[1]],
par = rep(paste(params[j,], collapse = "/"),
nrow(rqss[[j]][[1]])))
rqss[[j]][[2]] <- cbind(C = rep(totalINT, nrow(rqss[[j]][[2]])),
mxch = rep(i, nrow(rqss[[j]][[2]])),
rqss[[j]][[2]],
par = rep(paste(params[j,], collapse = "/"),
nrow(rqss[[j]][[2]])))
cat("--", j, "\n")
}
rqss <- unlist(rqss, recursive = F)
web.dat.ls <- rbindlist(rqss[seq(1, length(rqss), 2)])
iter.dat.ls <- rbindlist(rqss[seq(2, length(rqss), 2)])
return(list(web.dat.ls, iter.dat.ls))
}
stopCluster(cl)
RESULT <- unlist(RESULT, recursive = F)
chain.data <- rbindlist(RESULT[seq(1, length(RESULT), 2)])
iter.data <- rbindlist(RESULT[seq(2, length(RESULT), 2)])
rm(RESULT)
write.csv(chain.data, file = paste(filepath, "/webdata-",
totalINT, ".csv", sep = ""),
row.names = F)
#write.csv(iter.data, file = paste(filepath, "/iterdata-",
#                                  totalINT, ".csv", sep = ""),
#          row.names = F)
return(rbindlist(RESULT))
}
getQSS <- function(webiter = 100, maxchain = 9, totalINT = 14, params, filepath){
require(doSNOW)
require(parallel)
require(data.table)
#make the cluster
cl <- makeCluster(detectCores()-1)
registerDoSNOW(cl)
RESULT <- foreach(i = 1:maxchain) %dopar% {
source("C:/Users/jjborrelli/Desktop/GitHub/Food-Chain-Length/robustnessFUNC.R")
#cat(i, "\n")
#rwebs <- randomWEBS(S = 10, numweb = webiter, chain = i, total = totalINT)
rwebs <- niche_maker(15, 10, totalINT)
rqss <- list()
for(j in 1:nrow(params)){
rqss[[j]] <- randomQSS(mywebs = rwebs, params = params[j,1:2])
rqss[[j]][[1]] <- cbind(C = rep(totalINT, nrow(rqss[[j]][[1]])),
mxch = rep(i, nrow(rqss[[j]][[1]])),
rqss[[j]][[1]],
par = rep(paste(params[j,], collapse = "/"),
nrow(rqss[[j]][[1]])))
rqss[[j]][[2]] <- cbind(C = rep(totalINT, nrow(rqss[[j]][[2]])),
mxch = rep(i, nrow(rqss[[j]][[2]])),
rqss[[j]][[2]],
par = rep(paste(params[j,], collapse = "/"),
nrow(rqss[[j]][[2]])))
cat("--", j, "\n")
}
rqss <- unlist(rqss, recursive = F)
web.dat.ls <- rbindlist(rqss[seq(1, length(rqss), 2)])
iter.dat.ls <- rbindlist(rqss[seq(2, length(rqss), 2)])
return(list(web.dat.ls, iter.dat.ls))
}
stopCluster(cl)
RESULT <- unlist(RESULT, recursive = F)
chain.data <- rbindlist(RESULT[seq(1, length(RESULT), 2)])
iter.data <- rbindlist(RESULT[seq(2, length(RESULT), 2)])
rm(RESULT)
write.csv(chain.data, file = paste(filepath, "/webdata-",
totalINT, ".csv", sep = ""),
row.names = F)
#write.csv(iter.data, file = paste(filepath, "/iterdata-",
#                                  totalINT, ".csv", sep = ""),
#          row.names = F)
return(rbindlist(RESULT))
}
system.time(
for(con in 1:length(ints)){
getQSS(10, maxchain =7, C = ints[con], totalINT = ints[con]/100, params = pars,
filepath = "C:/Users/jjborrelli/Desktop/CHAINDATA_ni/")
cat(con/length(ints)*100, "%", "\n")
}
)
system.time(
for(con in 1:length(ints)){
getQSS(10, maxchain =7, totalINT = ints[con]/100, params = pars,
filepath = "C:/Users/jjborrelli/Desktop/CHAINDATA_ni/")
cat(con/length(ints)*100, "%", "\n")
}
)
getQSS <- function(webiter = 100, maxchain = 9, totalINT = 14, params, filepath){
require(doSNOW)
require(parallel)
require(data.table)
#make the cluster
cl <- makeCluster(detectCores()-1)
registerDoSNOW(cl)
RESULT <- foreach(i = 1:maxchain) %dopar% {
source("C:/Users/jjborrelli/Desktop/GitHub/Food-Chain-Length/robustnessFUNC.R")
#cat(i, "\n")
#rwebs <- randomWEBS(S = 10, numweb = webiter, chain = i, total = totalINT)
rwebs <- niche_maker(15, 10, totalINT)
rqss <- list()
for(j in 1:nrow(params)){
rqss[[j]] <- randomQSS(mywebs = rwebs, params = params[j,1:2])
rqss[[j]][[1]] <- cbind(C = rep(totalINT, nrow(rqss[[j]][[1]])),
mxch = rep(i, nrow(rqss[[j]][[1]])),
rqss[[j]][[1]],
par = rep(paste(params[j,], collapse = "/"),
nrow(rqss[[j]][[1]])))
rqss[[j]][[2]] <- cbind(C = rep(totalINT, nrow(rqss[[j]][[2]])),
mxch = rep(i, nrow(rqss[[j]][[2]])),
rqss[[j]][[2]],
par = rep(paste(params[j,], collapse = "/"),
nrow(rqss[[j]][[2]])))
cat("--", j, "\n")
}
rqss <- unlist(rqss, recursive = F)
web.dat.ls <- rbindlist(rqss[seq(1, length(rqss), 2)])
iter.dat.ls <- rbindlist(rqss[seq(2, length(rqss), 2)])
return(list(web.dat.ls, iter.dat.ls))
}
stopCluster(cl)
RESULT <- unlist(RESULT, recursive = F)
chain.data <- rbindlist(RESULT[seq(1, length(RESULT), 2)])
iter.data <- rbindlist(RESULT[seq(2, length(RESULT), 2)])
rm(RESULT)
write.csv(chain.data, file = paste(filepath, "/webdata-",
totalINT, ".csv", sep = ""),
row.names = F)
#write.csv(iter.data, file = paste(filepath, "/iterdata-",
#                                  totalINT, ".csv", sep = ""),
#          row.names = F)
return(chain.data)
}
system.time(
for(con in 1:length(ints)){
getQSS(10, maxchain =7, totalINT = ints[con]/100, params = pars,
filepath = "C:/Users/jjborrelli/Desktop/CHAINDATA_ni/")
cat(con/length(ints)*100, "%", "\n")
}
)
1381/60
web.files <- list.files(path = "C:/Users/jjborrelli/Desktop/CHAINDATA_ni/", pattern = "web")
web.files
temp.ls <- list()
for(i in 1:length(web.files)){
temp.ls[[i]]<- fread(paste("C:/Users/jjborrelli/Desktop/CHAINDATA_ni/",
web.files[i], sep = ""))
}
webdata <- rbindlist(temp.ls)
webdata$C <- factor(webdata$C)
sub1 <- subset(webdata, par == "1/-10" | par == "10/-1" | par == "1/-5" | par == "5/-1")
sub2 <- subset(webdata, par == "5/-10" | par == "10/-5")
sub3 <- subset(webdata, par == "1/-1" | par == "10/-10" | par == "5/-5")
df <- data.frame(C = sub1$C, D = factor(sub1$diam +1), qss = sub1$qss, par = factor(sub1$par))
df2 <- data.frame(C = sub2$C, D = factor(sub2$diam +1), qss = sub2$qss, par = factor(sub2$par))
df3 <- data.frame(C = sub3$C, D = factor(sub3$diam +1), qss = sub3$qss, par = factor(sub3$par))
ggplot(aes(y = qss, x = D), data = df) + geom_boxplot() +
facet_grid(par~C, scale = "fixed") + theme_bw() +
xlab("Longest Chain Length") + ylab("Quasi Sign-Stability")
ggplot(aes(y = qss, x = D), data = df2) + geom_boxplot() +
facet_grid(par~C, scale = "fixed") + theme_bw() +
xlab("Longest Chain Length") + ylab("Quasi Sign-Stability")
sem.l <- function(x){mean(x) - 1.96*sqrt(var(x)/length(x))}
sem.u <- function(x){mean(x) + 1.96*sqrt(var(x)/length(x))}
ggplot(sub1, aes(x = factor(diam+1), y = qss, shape = C)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point", aes(shape = C)) +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_wrap(C~par) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggplot(sub2, aes(x = factor(diam+1), y = qss, shape = C)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point", aes(shape = C)) +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_wrap(C~par) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggplot(sub2, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(C~par) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggplot(sub3, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(C~par) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggplot(sub1, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
web.files <- list.files(path = "C:/Users/jjborrelli/Desktop/CHAINDATA/", pattern = "web")
temp.ls <- list()
for(i in 1:length(web.files)){
temp.ls[[i]]<- fread(paste("C:/Users/jjborrelli/Desktop/CHAINDATA/",
web.files[i], sep = ""))
}
webdata <- rbindlist(temp.ls)
webdata$C <- factor(webdata$C)
sem.l <- function(x){mean(x) - 1.96*sqrt(var(x)/length(x))}
sem.u <- function(x){mean(x) + 1.96*sqrt(var(x)/length(x))}
ggplot(sub1, aes(x = factor(diam+1), y = qss, shape = C)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point", aes(shape = C)) +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_wrap(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggplot(sub1, aes(x = factor(diam+1), y = qss, shape = C)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point", aes(shape = C)) +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggplot(sub1, aes(x = factor(diam+1), y = qss) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggplot(sub1, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
sub1 <- subset(webdata, par == "1/-10" | par == "10/-1" | par == "1/-5" | par == "5/-1")
ggplot(sub1, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
sub1
data.files <- list.files(path = "C:/Users/jjborrelli/Desktop/CHAINDATA/", pattern = "iter")
test.tab <- fread(paste("C:/Users/jjborrelli/Desktop/CHAINDATA/",
data.files[i], sep = ""),
select = c("C", "reals", "im", "par"))
rm(test.tab)
sub2 <- subset(webdata, par == "5/-10" | par == "10/-5")
sub3 <- subset(webdata, par == "1/-1" | par == "10/-10" | par == "5/-5")
?ggsave
source('~/.active-rstudio-document', echo=TRUE)
ggplot(sub1, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA_ni/niche1.png", dpi = 1000, width = 4, height = 5)
dev.off()
ggplot(sub1, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA_ni/niche1.png", dpi = 1000, width = 8, height = 10)
dev.off()
ggplot(sub1, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA_ni/niche1.jpeg", dpi = 1000, width = 8, height = 10)
dev.off()
ggplot(sub2, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA_ni/niche2.jpeg", dpi = 1000, width = 8, height = 10)
dev.off()
ggplot(sub3, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA_ni/niche3.jpeg", dpi = 1000, width = 8, height = 10)
dev.off()
ggplot(webdata, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA_ni/niche3.jpeg", dpi = 1000, width = 5, height = 10)
ggplot(sub3, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA_ni/niche3.jpeg", dpi = 1000, width = 8, height = 10)
dev.off()
ggplot(webdata, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA_ni/niche-all.jpeg", dpi = 1000, width = 5, height = 10)
dev.off()
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA_ni/niche-all.jpeg", dpi = 1000, width = 8, height = 10)
ggplot(sub1, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA/rand1.jpeg", dpi = 1000, width = 8, height = 10)
dev.off()
ggplot(sub2, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA/rand2.jpeg", dpi = 1000, width = 8, height = 10)
dev.off()
ggplot(sub3, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA/rand3.jpeg", dpi = 1000, width = 8, height = 10)
dev.off()
ggplot(webdata, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA/rand-all.jpeg", dpi = 1000, width = 8, height = 10)
dev.off()
web.files <- list.files(path = "C:/Users/jjborrelli/Desktop/CHAINDATA/", pattern = "web")
temp.ls <- list()
for(i in 1:length(web.files)){
temp.ls[[i]]<- fread(paste("C:/Users/jjborrelli/Desktop/CHAINDATA/",
web.files[i], sep = ""))
}
webdata <- rbindlist(temp.ls)
webdata$C <- factor(webdata$C)
#sem.l <- function(x){mean(x) - 1.96*sqrt(var(x)/length(x))}
#sem.u <- function(x){mean(x) + 1.96*sqrt(var(x)/length(x))}
sub1 <- subset(webdata, par == "1/-10" | par == "10/-1" | par == "1/-5" | par == "5/-1")
sub2 <- subset(webdata, par == "5/-10" | par == "10/-5")
sub3 <- subset(webdata, par == "1/-1" | par == "10/-10" | par == "5/-5")
ggplot(sub1, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA/rand1.jpeg", dpi = 1000, width = 8, height = 10)
dev.off()
ggplot(sub2, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA/rand2.jpeg", dpi = 1000, width = 8, height = 10)
dev.off()
ggplot(sub3, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA/rand3.jpeg", dpi = 1000, width = 8, height = 10)
dev.off()
ggplot(webdata, aes(x = factor(diam+1), y = qss)) +
geom_point(alpha = .25, position = position_jitter(w=0.2), col = "grey58") +
stat_summary(fun.y="mean", geom="point") +
stat_summary(fun.ymin = sem.l, fun.y = "mean", fun.ymax = sem.u,
geom="errorbar", width = .2) +
#geom_smooth(method = "glm", aes(lty = C)) +
facet_grid(par~C) + theme_bw() +
xlab("Longest Food Chain Length") + ylab("Quasi sign-stability")
ggsave("C:/Users/jjborrelli/Desktop/CHAINDATA/rand-all.jpeg", dpi = 1000, width = 8, height = 10)
dev.off()
getwd()
setwd(paste(getwd(). "Food-Chain-Length/Tables/", sep = ""))
setwd(paste(getwd() "Food-Chain-Length/Tables/", sep = ""))
setwd(paste(getwd(), "Food-Chain-Length/Tables/", sep = ""))
setwd(paste(getwd(), "/Food-Chain-Length/Tables/", sep = ""))
webdata
write.csv(webdata, "randwebINFO.csv", row.names = F)
web.files <- list.files(path = "C:/Users/jjborrelli/Desktop/CHAINDATA_ni/", pattern = "web")
temp.ls <- list()
for(i in 1:length(web.files)){
temp.ls[[i]]<- fread(paste("C:/Users/jjborrelli/Desktop/CHAINDATA_ni/",
web.files[i], sep = ""))
}
webdata <- rbindlist(temp.ls)
webdata$C <- factor(webdata$C)
webdata
write.csv(webdata, "nichewebINFO.csv", row.names = F)
